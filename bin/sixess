#!/bin/bash
set -e

VERSION="0.1"
EXE=$(basename $0)
BINDIR=$(dirname $(readlink -f $0))
DBDIR=$(readlink -f "$BINDIR/../db/")
DBINST=$(cd "$DBDIR" && echo *)
DB="RDP"
THREADS=1
QUIET=0

#............................................................................
# Reusable functions

function msg {
  if [ $QUIET -eq 0 ]; then
    echo -e "$*" 1>&2
  fi
}

function err {
  echo "ERROR: $*" 1>&2
  exit 1
}

function exitOnFailure {
  if [ $1 -ne 0 ]; then
    err "$2 failed to run (errorcode=$1)"
  fi
}

function banner {
  HBAR="--------------------------------------------------------------------"
  msg "$HBAR\n$*\n$HBAR"
}

function usage {
  QUIET=0
  msg "SYNOPSIS\n  $EXE $VERSION - rapid 16s identification from isolate FASTQ"
  msg "USAGE\n  $EXE [options] <reads.{fa,fq}[.gz]>"
  msg "OPTIONS"
  msg "  -h        Show this help"
  msg "  -q        Quiet mode, no output"
  msg "  -p DIR    Database folder ($DBDIR)"
  msg "  -d FILE   Database {$DBINST} ($DB)"
  msg "  -t NUM    CPU threads ($THREADS)"
  msg "  -V        Print version and exit"
  msg "AUTHOR\n  Torsten Seemann - https://github.com/MDU-PHL/sixess"
  exit
}

#...........................................................................
# Parse the command line options

while getopts 'hqVp:d:t:' opt ; do
  case $opt in
    h)
      usage
      ;;
    V)
      echo "$EXE $VERSION"
      exit
      ;;
    q)
      QUIET=1
      ;;
    p)
      DBDIR=$OPTARG
      ;;
    d)
      DB=$OPTARG
      ;;
    t)
      THREADS=$OPTARG
      ;;
  esac
done

# skip over out options
shift $((OPTIND-1))

# read our mandatory positional parameters
[ $# -lt 1 ] && err "Please provide a sequence read file"

#............................................................................
banner "Checking command line parameters"

if [ "$THREADS" -eq "0" ]; then
  THREADS=$(getconf _NPROCESSORS_ONLN)
  msg "Auto-detected $THREADS threads"
fi

DATABASE="$DBDIR/$DB"

[ ! -r "$DATABASE" ] && err "Can not read FASTA database: $DATABASE"

READFILE="$(readlink -f "$1")"
[ ! -r "$READFILE" ] && err "Can not read first FASTQ file: $READFILE"
READS="$*"

msg "Reads: $READS"
msg "Database: $DATABASE"

#............................................................................
banner "Checking external dependencies"

for EXE in minimap2 sort uniq cut head sed; do
  WHERE=$(which $EXE)
  if [ "$WHERE" != "" ]; then
    msg "Checking for $EXE - found $WHERE"
  else
    err "Could not find the required '$EXE' command"
  fi
done

#............................................................................
banner "Mapping reads to $DATABASE"

ACC=$(minimap2 -t 8 -x sr "$DATABASE" $READS 2> /dev/null \
      | cut -f 6 | sort | uniq -c | sort -nr \
      | head -n 1 | sed 's/^ *//' | cut -d ' ' -f 2)
msg "Top hit: $ACC"
      
HIT=$(grep -h -F "$ACC" "$DATABASE")
msg "Description: $HIT"

BINOMIAL=$(echo "$HIT" | cut -d ' ' -f 2,3)
msg "Species: $BINOMIAL"

#............................................................................
banner "Done."

echo "$BINOMIAL"
